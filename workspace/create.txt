0. create an angular workspace: ng new workspace --create-application=false
1. go to the workspace folder, create the project shell with: ng generate application shell --routing=true --style=scss
2. create the project mf-a with: ng generate application mf-a --routing=true --style=scss
3. create the project mf-b with: ng generate application mf-b --routing=true --style=scss
4. create shared-lib: ng generate library common-lib
5. add the following in angular.json to set scss instead of css, below the "projectType": "library",
			"schematics": {
				"@schematics/angular:component": {
					"style": "scss"
				}
			},
6. to eliminate the create of the browser folder set the following:
						"outputPath": {
							"base": "dist/shell",
							"browser": ""
						},
7. add component to shared-lib with: ng generate component angular-version--project=shared-lib
8. build shared lib, executed it in the workspace folder with: ng build common-lib --configuration production 
9. publish shared-lib after increase it version and change directory to dist/shared-lib with: npm publish --access=public
10. run npm i @angular-architects/native-federation -D
11. npm install @ng-bootstrap/ng-bootstrap
12. add @angular-architects/native-federation to mf-b with: ng add @angular-architects/native-federation --project mf-b --port 4202 -type remote
13. add @angular-architects/native-federation to mf-a with: ng add @angular-architects/native-federation --project mf-a --port 4201 -type remote
14. add @angular-architects/native-federation to shell with: ng add @angular-architects/native-federation --project shell --port 4200 -type dynamic-host
15. rename all application app.component.ts selector cause of all set to app-root and it will be collission
16. add the shell app.routes.ts
17. add the navigation part <nav> <ul> <li> routerlink etc in app.component.html in shell app